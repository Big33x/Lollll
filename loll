-- Optimization settings
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")

-- Key System
local accessKey = "TEST123" -- Change this to your desired key
local hasAccess = false

-- Function to check the key
local function checkKey(inputKey)
    if inputKey == accessKey then
        hasAccess = true
        print("Access Granted")
        KeyInputBox.Visible = false
        ConfirmButton.Visible = false
        Frame.Visible = true
    else
        print("Access Denied")
    end
end

-- Create UI elements
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ToggleButton = Instance.new("TextButton")
local KeyInputBox = Instance.new("TextBox")
local ConfirmButton = Instance.new("TextButton")
local ESPButton = Instance.new("TextButton")

-- Configure the ScreenGui
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Configure the Frame (main UI)
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.Position = UDim2.new(0.5, -100, 0.5, -100)
Frame.Size = UDim2.new(0, 200, 0, 200)
Frame.Visible = false -- Initially hidden

-- Configure the ToggleButton
ToggleButton.Parent = Frame
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Position = UDim2.new(0.5, -50, 0.3, -25)
ToggleButton.Size = UDim2.new(0, 100, 0, 50)
ToggleButton.Text = "Toggle UI"
ToggleButton.Draggable = true

-- Configure the KeyInputBox
KeyInputBox.Parent = ScreenGui
KeyInputBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KeyInputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInputBox.Position = UDim2.new(0.5, -75, 0.35, -25)
KeyInputBox.Size = UDim2.new(0, 150, 0, 50)
KeyInputBox.PlaceholderText = "Enter Key"
KeyInputBox.Text = "" -- Clear any default text

-- Add border to KeyInputBox
local KeyInputBoxBorder = Instance.new("UICorner")
KeyInputBoxBorder.CornerRadius = UDim.new(0, 5)
KeyInputBoxBorder.Parent = KeyInputBox

-- Add label to KeyInputBox
local KeyInputBoxLabel = Instance.new("TextLabel")
KeyInputBoxLabel.Parent = KeyInputBox
KeyInputBoxLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KeyInputBoxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInputBoxLabel.Size = UDim2.new(1, 0, 0.3, 0)
KeyInputBoxLabel.Position = UDim2.new(0, 0, -0.5, 0)
KeyInputBoxLabel.Text = "Enter Key Here"
KeyInputBoxLabel.TextScaled = true
KeyInputBoxLabel.BorderSizePixel = 0

-- Configure the ConfirmButton
ConfirmButton.Parent = ScreenGui
ConfirmButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ConfirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ConfirmButton.Position = UDim2.new(0.5, -50, 0.55, -25)
ConfirmButton.Size = UDim2.new(0, 100, 0, 50)
ConfirmButton.Text = "Confirm"

-- Add border to ConfirmButton
local ConfirmButtonBorder = Instance.new("UICorner")
ConfirmButtonBorder.CornerRadius = UDim.new(0, 5)
ConfirmButtonBorder.Parent = ConfirmButton

-- Configure the ESPButton
ESPButton.Parent = Frame
ESPButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
ESPButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ESPButton.Position = UDim2.new(0.5, -50, 0.7, -25)
ESPButton.Size = UDim2.new(0, 100, 0, 50)
ESPButton.Text = "Enable ESP"

-- Add border to ESPButton
local ESPButtonBorder = Instance.new("UICorner")
ESPButtonBorder.CornerRadius = UDim.new(0, 5)
ESPButtonBorder.Parent = ESPButton

-- Toggle UI visibility
local function toggleUI()
    if hasAccess then
        Frame.Visible = not Frame.Visible
    else
        print("Access required to toggle UI")
    end
end

-- Toggle ESP feature
local espEnabled = false

local function toggleESP()
    if hasAccess then
        espEnabled = not espEnabled
        if espEnabled then
            ESPButton.Text = "Disable ESP"
            print("ESP Enabled")
            -- Add your ESP code here
        else
            ESPButton.Text = "Enable ESP"
            print("ESP Disabled")
            -- Add your code to disable ESP here
        end
    else
        print("Access required to toggle ESP")
    end
end

-- Add functionality to the buttons
ToggleButton.MouseButton1Click:Connect(toggleUI)
ESPButton.MouseButton1Click:Connect(toggleESP)
ConfirmButton.MouseButton1Click:Connect(function()
    checkKey(KeyInputBox.Text)
end)

-- ESP Feature
local LocalPlayer = game:GetService("Players").LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local WorldToViewportPoint = Camera.WorldToViewportPoint
local RunService = game:GetService("RunService")

local Classes = {
    ["PlayerClient"] = {},
    ["Character"] = {},
    ["BowClient"] = {},
    ["Camera"] = {},
    ["RangedWeaponClient"] = {},
    ["GetEquippedItem"] = {},
    ["FPS"] = {},
}

for _, v in pairs(getgc(true)) do
    if typeof(v) == "function" and islclosure(v) then
        local info = debug.getinfo(v)
        local name = string.match(info.short_src, "%.([%w_]+)$")
        if name and Classes[name] and info.name ~= nil then
            Classes[name][info.name] = info.func
        end
    end
end

local Players = debug.getupvalue(Classes.PlayerClient.updatePlayers, 1)
local cache = {}
local HasEsp = {}

local function updateESP()
    if not espEnabled then return end
    for _, player in pairs(Players) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local pos, onScreen = WorldToViewportPoint(Camera, head.Position)
            if onScreen then
                if not HasEsp[player.Character] then
                    local box = Drawing.new("Square")
                    box.Visible = true
                    box.Color = Color3.new(0, 0, 255)
                    box.Thickness = 2
                    box.Transparency = 1
                    HasEsp[player.Character] = box
                end
                local box = HasEsp[player.Character]
                box.Size = Vector2.new(40, 40)
                box.Position = Vector2.new(pos.X - 20, pos.Y - 20)
            else
                if HasEsp[player.Character] then
                    HasEsp[player.Character].Visible = false
                    HasEsp[player.Character] = nil
                end
            end
        end
    end
end

RunService.RenderStepped:Connect(updateESP)
