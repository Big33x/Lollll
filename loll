-- Load the DrRay library from the GitHub repository Library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Define theme colors
local themeColors = {
    SchemeColor = Color3.fromRGB(0, 0, 255), -- Blue color
    Background = Color3.fromRGB(255, 255, 255), -- White background
    Header = Color3.fromRGB(0, 0, 255), -- Blue header
    TextColor = Color3.fromRGB(0, 0, 0), -- Black text
    ElementColor = Color3.fromRGB(220, 220, 220) -- Light grey elements
}

-- Create a new window and set its title and theme
local window = DrRayLibrary:Load("FOG", "Default", themeColors)

-- Create the Aimbot tab
local aimbotTab = window:NewTab("Aimbot", "ImageIdHere")

-- Add elements to the Aimbot tab
aimbotTab:NewLabel("Aimbot Settings")
aimbotTab:NewToggle("Enable Aimbot", "Toggle Aimbot On/Off", false, function(state)
    if state then
        print("Aimbot Enabled")
        -- Add your aimbot code here
    else
        print("Aimbot Disabled")
        -- Add your code to disable aimbot here
    end
end)
aimbotTab:NewSlider("Aimbot Sensitivity", "Adjust Aimbot Sensitivity", 100, 1, 50, function(value)
    print("Aimbot Sensitivity set to " .. value)
end)
aimbotTab:NewDropdown("Aimbot Target", "Choose Aimbot Target", {"Head", "Body", "Legs"}, function(selectedOption)
    print("Aimbot Target set to " .. selectedOption)
end)

-- Create the ESP tab
local espTab = window:NewTab("ESP", "ImageIdHere")

-- Add elements to the ESP tab
espTab:NewLabel("ESP Settings")
local espEnabled = false

espTab:NewToggle("Enable ESP", "Toggle ESP On/Off", false, function(state)
    espEnabled = state
    if espEnabled then
        print("ESP Enabled")
        -- Enable ESP code here
        enableESP()
    else
        print("ESP Disabled")
        -- Disable ESP code here
        disableESP()
    end
end)

local function enableESP()
    local LocalPlayer = cloneref(game:GetService("Players").LocalPlayer)
    local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
    local Workspace = cloneref(game:GetService("Workspace"))
    local Camera = Workspace.CurrentCamera
    local WorldToViewportPoint = Camera.WorldToViewportPoint
    local RunService = cloneref(game:GetService("RunService"))
    local TweenService = cloneref(game:GetService("TweenService"))
    local Coregui = gethui() or cloneref(game:GetService("CoreGui"))
    local gui = Instance.new("ScreenGui", Coregui)

    while not game:IsLoaded() do task.wait() end
    local Classes = {
        ["PlayerClient"] = {},
        ["Character"] = {},
        ["BowClient"] = {},
        ["Camera"] = {},
        ["RangedWeaponClient"] = {},
        ["GetEquippedItem"] = {},
        ["FPS"] = {},
    }

    for _, v in pairs(getgc(true)) do
        if typeof(v) == "function" and islclosure(v) then
            local info = debug.getinfo(v)
            local name = string.match(info.short_src, "%.([%w_]+)$")
            if name and Classes[name] and info.name ~= nil then
                Classes[name][info.name] = info.func
            end
        end
    end
    local Players = debug.getupvalue(Classes.PlayerClient.updatePlayers, 1)
    local cache = {}
    local HasEsp = {}
    drawings.info = playertable
    HasEsp[playertable.model] = drawings
end

local function disableESP()
    -- Add your code to disable ESP here
    -- For example, you can clear ESP drawings or disable certain ESP functionalities
    print("ESP Disabled")
end

-- Create the Misc tab
local miscTab = window:NewTab("Misc", "ImageIdHere")

-- Add elements to the Misc tab
miscTab:NewButton("Fly", "Enable Flying", function()
    print("Flying Enabled")
    -- Add your fly code here
end)
miscTab:NewToggle("God Mode", "Toggle God Mode On/Off", false, function(state)
    if state then
        print("God Mode Enabled")
        -- Add your god mode code here
    else
        print("God Mode Disabled")
        -- Add your code to disable god mode here
    end
end)
miscTab:NewSlider("Jump Power", "Adjust Jump Power", 300, 50, 100, function(value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = value
end)

-- FOV Slider and Toggle
local fovEnabled = false
local defaultFOV = game.Workspace.CurrentCamera.FieldOfView

miscTab:NewToggle("Enable FOV", "Toggle FOV On/Off", false, function(state)
    fovEnabled = state
    if not fovEnabled then
        game.Workspace.CurrentCamera.FieldOfView = defaultFOV
    end
end)

miscTab:NewSlider("FOV", "Adjust Field of View", 120, 70, defaultFOV, function(value)
    if fovEnabled then
        game.Workspace.CurrentCamera.FieldOfView = value
    end
end)

-- Create the first tab
local mainTab = window:NewTab("Main", "ImageIdHere")

-- Add elements to the first tab
mainTab:NewLabel("Welcome to FOG UI")
mainTab:NewButton("Click Me", "Prints Hello!", function()
    print('Hello!')
end)
mainTab:NewToggle("Toggle", "Toggle! (prints the state)", true, function(toggleState)
    if toggleState then
        print("On")
    else
        print("Off")
    end
end)
mainTab:NewInput("Input", "Prints your input.", function(text)
    print("Entered text: " .. text)
end)

-- Create a new tab
local myTab = window:NewTab("My Tab", "ImageIdHere")

-- Add elements to the new tab
myTab:NewButton("Button", "Prints Hello!", function()
    print('Hello!')
end)
myTab:NewSlider("Slider", "Epic slider", 1000, false, function(num)
    print(num)
end)
myTab:NewKeybind("Input Key", "Press the key to start; it will be printed out.", function(key)
    print(key)
end)
myTab:NewDropdown("Dropdown", "Select one of these options!", {"water", "dog", "air", "bb", "airplane", "wohhho", "yeay", "delete"}, function(selectedOption)
    print(selectedOption)
end)

-- Button to open and close the UI
local toggleUI = true

local ToggleUIButton = Instance.new("TextButton")
ToggleUIButton.Text = "Toggle UI"
ToggleUIButton.Size = UDim2.new(0, 100, 0, 50)
ToggleUIButton.Position = UDim2.new(0, 10, 0, 10)
ToggleUIButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
ToggleUIButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleUIButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

ToggleUIButton.MouseButton1Click:Connect(function()
    toggleUI = not toggleUI
    window:ToggleUI()
    if toggleUI then
        ToggleUIButton.Text = "Close UI"
    else
        ToggleUIButton.Text = "Open UI"
    end
end)

-- Optimize for mobile support
if game:GetService("UserInputService").TouchEnabled then
    local function dragify(Frame)
        local dragToggle = nil
        local dragSpeed = 0.125
        local dragInput = nil
        local dragStart = nil
        local startPos = nil

        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(Frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end

        Frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType.Touch then
                dragToggle = true
                dragStart = input.Position
                startPos = Frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)

        Frame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
                dragInput = input
            end
        end)

        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragToggle then
                updateInput(input)
            end
        end)
    end

    dragify(window)
end
