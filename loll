local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/kav"))()

-- Define theme colors
local themeColors = {
    SchemeColor = Color3.fromRGB(0, 0, 255), -- Blue color
    Background = Color3.fromRGB(255, 255, 255), -- White background
    Header = Color3.fromRGB(0, 0, 255), -- Blue header
    TextColor = Color3.fromRGB(0, 0, 0), -- Black text
    ElementColor = Color3.fromRGB(220, 220, 220) -- Light grey elements
}

local Window = Library.CreateLib("FOG", themeColors)
local Tab = Window:NewTab("Main")
local Section = Tab:NewSection("Controls")

-- Key System
local accessKey = "TEST123" -- Change this to your desired key
local hasAccess = false

-- Create the key input elements
local KeyInputBox = Section:NewTextBox("Enter Key", "Input your access key here", function(inputKey)
    if inputKey == accessKey then
        hasAccess = true
        print("Access Granted")
        -- Show the main UI
        Window:ToggleUI()
    else
        print("Access Denied")
    end
end)

-- Main UI Elements
Section:NewButton("ButtonText", "ButtonInfo", function()
    print("Clicked")
end)

Section:NewToggle("ToggleText", "ToggleInfo", function(state)
    if state then
        print("Toggle On")
    else
        print("Toggle Off")
    end
end)

getgenv().Toggled = false
local toggle = Section:NewToggle("Toggle", "Info", function(state)
    getgenv().Toggled = state
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if getgenv().Toggled then
        toggle:UpdateToggle("Toggle On")
    else
        toggle:UpdateToggle("Toggle Off")
    end
end)

Section:NewSlider("SliderText", "SliderInfo", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

Section:NewTextBox("TextboxText", "TextboxInfo", function(txt)
    print(txt)
end)

Section:NewKeybind("KeybindToggleUI", "Toggle UI", Enum.KeyCode.F, function()
    Library:ToggleUI()
end)

Section:NewDropdown("DropdownText", "DropdownInfo", {"Option 1", "Option 2", "Option 3"}, function(currentOption)
    print(currentOption)
end)

local oldList = {
  "2019",
  "2020"
}

local newList = {
  "2021",
  "2022"
}

local dropdown = Section:NewDropdown("Dropdown", "Info", oldList, function() end)

Section:NewButton("Update Dropdown", "Refreshes Dropdown", function()
    dropdown:Refresh(newList)
end)

Section:NewColorPicker("Color Text", "Color Info", Color3.fromRGB(0, 0, 0), function(color)
    print(color)
end)

for theme, color in pairs(themeColors) do
    Section:NewColorPicker(theme, "Change your " .. theme, color, function(color3)
        Library:ChangeColor(theme, color3)
    end)
end
