-- Load the DrRay library from the GitHub repository Library
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

-- Define theme colors
local themeColors = {
    SchemeColor = Color3.fromRGB(0, 0, 255), -- Blue color
    Background = Color3.fromRGB(255, 255, 255), -- White background
    Header = Color3.fromRGB(0, 0, 255), -- Blue header
    TextColor = Color3.fromRGB(0, 0, 0), -- Black text
    ElementColor = Color3.fromRGB(220, 220, 220) -- Light grey elements
}

-- Create a new window and set its title and theme
local window = DrRayLibrary:Load("FOG", "Default", themeColors)

-- Create the Aimbot tab
local aimbotTab = window:NewTab("Aimbot", "ImageIdHere")

-- Add elements to the Aimbot tab
aimbotTab:NewLabel("Aimbot Settings")
aimbotTab:NewToggle("Enable Aimbot", "Toggle Aimbot On/Off", false, function(state)
    if state then
        print("Aimbot Enabled")
        -- Add your aimbot code here
    else
        print("Aimbot Disabled")
        -- Add your code to disable aimbot here
    end
end)
aimbotTab:NewSlider("Aimbot Sensitivity", "Adjust Aimbot Sensitivity", 100, 1, 50, function(value)
    print("Aimbot Sensitivity set to " .. value)
end)
aimbotTab:NewDropdown("Aimbot Target", "Choose Aimbot Target", {"Head", "Body", "Legs"}, function(selectedOption)
    print("Aimbot Target set to " .. selectedOption)
end)

-- Button to open and close the UI
local toggleUI = true

local ToggleUIButton = Instance.new("TextButton")
ToggleUIButton.Text = "Toggle UI"
ToggleUIButton.Size = UDim2.new(0, 100, 0, 50)
ToggleUIButton.Position = UDim2.new(0, 10, 0, 10)
ToggleUIButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
ToggleUIButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleUIButton.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

ToggleUIButton.MouseButton1Click:Connect(function()
    toggleUI = not toggleUI
    window:ToggleUI()
    if toggleUI then
        ToggleUIButton.Text = "Close UI"
    else
        ToggleUIButton.Text = "Open UI"
    end
end)

-- Optimize for mobile support
if game:GetService("UserInputService").TouchEnabled then
    local function dragify(Frame)
        local dragToggle = nil
        local dragSpeed = 0.125
        local dragInput = nil
        local dragStart = nil
        local startPos = nil

        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService("TweenService"):Create(Frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end

        Frame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType.Touch then
                dragToggle = true
                dragStart = input.Position
                startPos = Frame.Position
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end
        end)

        Frame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType.Touch then
                dragInput = input
            end
        end)

        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragToggle then
                updateInput(input)
            end
        end)
    end

    dragify(window)
end
